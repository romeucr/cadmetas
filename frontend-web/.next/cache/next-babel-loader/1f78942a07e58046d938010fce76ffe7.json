{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rcastro/Desktop/dev-ws/cadmetas/frontend-web/pages/cadastrar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\n\nfunction Cadastrar() {\n  const {\n    0: meta,\n    1: setMeta\n  } = useState({\n    name: '',\n    description: '',\n    status: ''\n  }); //pega o que já estava anteriormente preenchido e atualiza. Utiliza o name e o value do input\n\n  const onChangeInput = e => setMeta(_objectSpread(_objectSpread({}, meta), {}, {\n    [e.target.name]: e.target.value\n  }));\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastrar Meta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nome: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Nome da meta\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Descri\\xE7\\xE3o: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        id: \"description\",\n        placeholder: \"Descri\\xE7\\xE3o da meta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Status: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"status\",\n        id: \"status\",\n        placeholder: \"Status da meta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n}\n\nexport default Cadastrar;","map":{"version":3,"sources":["/Users/rcastro/Desktop/dev-ws/cadmetas/frontend-web/pages/cadastrar.js"],"names":["React","useState","Cadastrar","meta","setMeta","name","description","status","onChangeInput","e","target","value"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,SAAT,GAAqB;AAElB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBH,QAAQ,CAAC;AAC9BI,IAAAA,IAAI,EAAE,EADwB;AAE9BC,IAAAA,WAAW,EAAE,EAFiB;AAG9BC,IAAAA,MAAM,EAAE;AAHsB,GAAD,CAAhC,CAFkB,CAQlB;;AACA,QAAMC,aAAa,GAAGC,CAAC,IAAIL,OAAO,iCAAKD,IAAL;AAAW,KAACM,CAAC,CAACC,MAAF,CAASL,IAAV,GAAiBI,CAAC,CAACC,MAAF,CAASC;AAArC,KAAlC;;AAEA,sBACG;AAAA,4BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAEG;AAAA;AAAA;AAAA;AAAA,YAFH,eAIG;AAAA,8BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AACG,QAAA,IAAI,EAAC,MADR;AAEG,QAAA,IAAI,EAAC,MAFR;AAGG,QAAA,EAAE,EAAC,MAHN;AAIG,QAAA,WAAW,EAAC,cAJf;AAKG,QAAA,QAAQ,EAAEH;AALb;AAAA;AAAA;AAAA;AAAA,cAFH,eASG;AAAA;AAAA;AAAA;AAAA,cATH,eASS;AAAA;AAAA;AAAA;AAAA,cATT,eAUG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVH,eAWG;AACG,QAAA,IAAI,EAAC,MADR;AAEG,QAAA,IAAI,EAAC,aAFR;AAGG,QAAA,EAAE,EAAC,aAHN;AAIG,QAAA,WAAW,EAAC;AAJf;AAAA;AAAA;AAAA;AAAA,cAXH,eAiBG;AAAA;AAAA;AAAA;AAAA,cAjBH,eAiBS;AAAA;AAAA;AAAA;AAAA,cAjBT,eAkBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBH,eAmBG;AACG,QAAA,IAAI,EAAC,MADR;AAEG,QAAA,IAAI,EAAC,QAFR;AAGG,QAAA,EAAE,EAAC,QAHN;AAIG,QAAA,WAAW,EAAC;AAJf;AAAA;AAAA;AAAA;AAAA,cAnBH,eAyBG;AAAA;AAAA;AAAA;AAAA,cAzBH,eAyBS;AAAA;AAAA;AAAA;AAAA,cAzBT,eA0BG;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BH;AAAA;AAAA;AAAA;AAAA;AAAA,YAJH;AAAA,kBADH;AAmCF;;AAED,eAAeN,SAAf","sourcesContent":["import React, { useState } from 'react'\n\nfunction Cadastrar() {\n\n   const [meta, setMeta] = useState({\n      name: '',\n      description: '',\n      status: ''\n   })\n\n   //pega o que já estava anteriormente preenchido e atualiza. Utiliza o name e o value do input\n   const onChangeInput = e => setMeta({...meta, [e.target.name]: e.target.value})\n\n   return (\n      <>\n         <h1>Cadastrar Meta</h1>\n         <hr />\n\n         <form>\n            <label>Nome: </label>\n            <input\n               type=\"text\"\n               name=\"name\"\n               id=\"name\"\n               placeholder=\"Nome da meta\"\n               onChange={onChangeInput}\n            />\n            <br /><br />\n            <label>Descrição: </label>\n            <input\n               type=\"text\"\n               name=\"description\"\n               id=\"description\"\n               placeholder=\"Descrição da meta\"\n            />\n            <br /><br />\n            <label>Status: </label>\n            <input\n               type=\"text\"\n               name=\"status\"\n               id=\"status\"\n               placeholder=\"Status da meta\"\n            />\n            <br /><br />\n            <button type=\"submit\">Cadastrar</button>\n         </form>\n      </>\n   )\n}\n\nexport default Cadastrar"]},"metadata":{},"sourceType":"module"}